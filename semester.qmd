---
title: "Weekly overview"
toc: true
---


## Week 1

### Market Research

First Data Analysis
Programming Toolkit

#### Analyze Netflix Data 


A) Using Excel

*[Here](https://support.microsoft.com/en-us/office/create-a-pivottable-to-analyze-worksheet-data-a9a84538-bfe9-40a9-a8e9-f99134456576) you can find instructions on how to create Pivot Tables.*

Descriptive analysis of Netflix data:

1. Download the [ðŸ“Š Netflix data (Google Sheets)](https://docs.google.com/spreadsheets/d/1QO0UfC43YwJ0YIg5LWaYkVUX-qGh93wZZ6JLyHa3_bg/edit?gid=1337641040#gid=1337641040) in Excel format from the Google Sheets file.  
2. Create your own Pivot Table (with "group" as rows and "outcome" as columns) and display percentage values.
3. Open Excel, go to the "Home" menu, and click on "Analyze Data."  


---

B) Using Python (see code in semester overview)

---

C) Using Generative AI: Perform the anlysis of the data with [Claude](https://claude.ai/new) from Anthropic.


---


### Statistics

Data basics


---

## Week 2

no data

---

## Week 3

### Bar Chart

```python
import pandas as pd
import altair as alt
```

#### Import 

```python

ROOT = "https://raw.githubusercontent.com/kirenz/datasets/master/"
DATA = "loan50.csv"

df = pd.read_csv(ROOT + DATA)
```

#### Simple bar chart

```python
alt.Chart(df).mark_bar().encode(
    x='count()',
    y='homeownership'
)
```

#### Dodged bar chart

```python
alt.Chart(df).mark_bar().encode(
    x='count()',
    y='homeownership',
    color='verified_income',
)
```

#### Standardized bar chart

```python
alt.Chart(df).mark_bar().encode(
    x=alt.X('count()', stack='normalize'),
    y='homeownership',
    color='verified_income',
    tooltip=['count(verified_income)']
).interactive()
```

---

## Week 4 

### Data Analysis with Pandas

- [ðŸ’» Pandas Lab Survey (code)](https://docs.google.com/document/d/1WdljZoBXHJZVxT0Mx1p35NYv-eo8gBK3GKBO805zQUI/edit?tab=t.giq9efy8ifmm#heading=h.g1jll8im57cr)


### Contingency tables code


```python
import altair as alt
import pandas as pd

ROOT = "https://raw.githubusercontent.com/kirenz/datasets/master/"
DATA = "loans.csv"

df = pd.read_csv(ROOT + DATA)

# Einfache Tabelle
pd.crosstab(
    df['application_type'],
    df['homeownership'],
    margins=True
)

# Tabelle mit Prozent
pd.crosstab(
    df['application_type'],
    df['homeownership'],
    margins=True,
    normalize=True
)

# Kreuztabelle, Zeilenprozent

pd.crosstab(
    df['application_type'],
    df['homeownership'],
    margins=True,
    normalize='index'
)
# Kreuztabelle, Spaltenprozent

pd.crosstab(
    df['application_type'],
    df['homeownership'],
    margins=True,
    normalize='columns'
)
```

### Scatter plot, mean and median


```python
import altair as alt
import pandas as pd

ROOT = "https://raw.githubusercontent.com/kirenz/datasets/master/"
DATA = "loan50.csv"

df = pd.read_csv(ROOT + DATA)


# Scatter-Plot

alt.Chart(df).mark_point().encode(
    x='annual_income',
    y='loan_amount'
)

# Mittelwert und Median


print(df['annual_income'].mean())

print(f'The mean is: {df['annual_income'].mean()}')

print(df['annual_income'].median())


df[['annual_income', 'loan_amount']].describe().T

```


---

## Week 5

### Market Research

Download the survey results (with optimized column names) from Moodle: [Data df_clean.csv](https://moodle.hdm-stuttgart.de/mod/resource/view.php?id=369571)

Use 1) Excel 2) Jupyter Notebook:

- Analyze the variable `soziale_medien`: Calculate the mean, median, and mode.


### Statistics

- [Meta Ads data](https://docs.google.com/spreadsheets/d/1u-Nk_6xBlRqxtbpe2jokK9GnH1cpWQkGWXXrUj--MlA/edit?usp=sharing)

Download the data as CSV and import in Jupyter Notebook.


## Week 6




<!-- Task 1:

Download the loans data as excel file: [Data](https://docs.google.com/spreadsheets/d/1SJhTA9rAS1EDz-eqXJOut54olPJJqOydJJ6sDD91ujA/edit?gid=0#gid=0)

Create a histogram for the variable annual_income


Task 2:

Download the data as Excel-file; [Data](https://docs.google.com/spreadsheets/d/1xXhRBbKjqlglrUUdRKWhwG5XiMKQsbGqOagLara3V0k/edit#gid=0)  -->



## Week 8

### Statistics

Task:

**Excel**

- Download the [provided data](https://docs.google.com/spreadsheets/d/1Ugl8rArU7RKK9ytB752N_4GQBnHSfs8mkZCLgDM2dJA/edit?usp=drive_link) as an Excel sheet.

- Identify the scale of measurement (nominal, ordinal, numeric integer, or numeric continuous) for each variable.

- Generate a suitable plot to visualize the relationship between the two variables.

- List two key insights derived from the plot.

- Develop a regression model and show its equation.

- Make a prediction for ads spending of 20000 

**Python**

- Perform the same tasks using Python



## Week 9


### Regression Social Media Campaign


**Data**: [Download the data to Excel](https://docs.google.com/spreadsheets/d/1r76Qa87HicgHV2ZVFaVBGQnn5WwZPIVRyqYxu2yS7_s/edit?usp=sharing)

**Objective:** Analyze factors influencing the success of a social media campaign using regression in Excel.

**Dataset Variables:**

* **`Row`**: Observation number.
* **`Conversions`** (Dependent Variable): Number of desired actions (e.g., sales, sign-ups) generated by the campaign.
* **`AdSpendEuro`** (Independent Variable): Amount spent on paid social media advertising for the campaign (in Euros).
* **`InfluencerMentions`** (Independent Variable): Number of mentions or dedicated posts by relevant influencers during the campaign.
* **`ContentQualityScore`** (Independent Variable): A rating (scale 1-10) of the perceived quality and appeal of the social media content.
* **`PostReachOrganic`** (Independent Variable): The number of unique users who saw the campaign's organic (non-paid) posts.

**Tasks:**

1.  **Explore Data:**
    * Calculate descriptive statistics for Conversions (mean and standard deviation).
    * Create plots of `Conversions` vs. each independent variable. State your initial insights about relationships.
2.  **Perform Regression (Excel Data Analysis):**
    * Predict different models using `Conversions` as an outcome variable. Obtain $R^2$. 
3.  **Interpret Results:**
    * Explain $R^2$ for each model
4.  **Discussion:**
    * Which variables significantly impact conversions?
    * What are the practical implications for managing a social media campaign based on your findings?

### Strength of fit

```python
import pandas as pd
import altair as alt
from sklearn.metrics import r2_score


from sklearn.linear_model import LinearRegression

## Import data

df = pd.DataFrame(
    {'sales': [2500, 4500, 6500, 8500, 10500, 12500, 14500, 16500, 18500, 20500],
      'ads'  : [900, 1400, 3600, 3800, 6200, 5200, 6800, 8300, 9800, 10100]}
)

## Plot data

chart = alt.Chart(df).mark_point().encode(
    x='ads',
    y='sales'
)

chart + chart.transform_regression('ads', 'sales', extent=[0, 12000]).mark_line()

```

###


**Data**: [Download the data as CSV](https://docs.google.com/spreadsheets/d/1r76Qa87HicgHV2ZVFaVBGQnn5WwZPIVRyqYxu2yS7_s/edit?usp=sharing)



## Week 10

- [Task in Google Docs](https://docs.google.com/document/d/1LqVUNyrFmkc0J2CtDwzQGRyiSexXGr8vS-t2B9hPsAw/edit?usp=sharing) 

### Multiple Regression with Excel

**Data**: [Download the data to Excel](https://docs.google.com/spreadsheets/d/1r76Qa87HicgHV2ZVFaVBGQnn5WwZPIVRyqYxu2yS7_s/edit?usp=sharing)

- Open the data in Excel
- In the file menu: open `Extras`
- Open Excel `Add-Ins` and select `Analyse-Funktionen`

Create a multiple regression where we predict Conversion:

- Open Extras and select `Daten-Analyse`
- Select Regression
  - Input Y Range: $F$1:$F$201
  - Input X Range: $B$1:$E$201
  - Select: `Labels`
  - Select: `Residual Plots` 
  - Press `OK`

Important results:

- R Square
- Coefficients

### Multiple Regression with Python

**Data**: [Download the data to CSV](https://docs.google.com/spreadsheets/d/1r76Qa87HicgHV2ZVFaVBGQnn5WwZPIVRyqYxu2yS7_s/edit?usp=sharing)


Perform a multiple regression:


```python
import pandas as pd

from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

df = pd.read_csv('https://raw.githubusercontent.com/kirenz/datasets/master/loans.csv')

```


<!-- 
### Multiple Regression Example Mario Kart

```python
import pandas as pd
import altair as alt

from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
from sklearn.metrics import r2_score

df = pd.read_csv('https://raw.githubusercontent.com/kirenz/datasets/master/mariokart.csv')


```

Data preparation steps

- we only need `cond` and `total_pr`
- only keep games with total price below 100
- make a copy of our original dataframe (before we change the data). Call it df_orig
- Convert categorical into binary numeric format (`.get_dummies()`)
- we only keep condition new (1=new and 0=used)
 -->
